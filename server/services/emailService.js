import nodemailer from 'nodemailer';

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
 */
function createTransporter() {
  const config = {
    host: process.env.SMTP_HOST,
    port: parseInt(process.env.SMTP_PORT || '587'),
    secure: process.env.SMTP_SECURE === 'true', // true –¥–ª—è 465, false –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ—Ä—Ç–æ–≤
    auth: {
      user: process.env.SMTP_USER,
      pass: process.env.SMTP_PASS,
    },
  };

  return nodemailer.createTransport(config);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –Ω–∞ email –∫–ª–∏–µ–Ω—Ç–∞
 *
 * @param {Object} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @param {string} params.to - Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è
 * @param {string} params.name - –§–ò–û –∫–ª–∏–µ–Ω—Ç–∞
 * @param {string} params.testResult - –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ ("–¢—è–∂–µ–ª–∞—è —Å—Ç–µ–ø–µ–Ω—å")
 * @param {number} params.averageDb - –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å dB
 * @param {number} params.leftEarDb - –£—Ä–æ–≤–µ–Ω—å dB –ª–µ–≤–æ–≥–æ —É—Ö–∞
 * @param {number} params.rightEarDb - –£—Ä–æ–≤–µ–Ω—å dB –ø—Ä–∞–≤–æ–≥–æ —É—Ö–∞
 * @param {string} params.description - –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
 * @param {string} params.pdfBase64 - PDF —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64
 * @param {string} params.pdfFilename - –ù–∞–∑–≤–∞–Ω–∏–µ PDF —Ñ–∞–π–ª–∞
 * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
export async function sendTestResults({
  to,
  name,
  testResult,
  averageDb,
  leftEarDb,
  rightEarDb,
  description,
  pdfBase64,
  pdfFilename = 'hearing-test-results.pdf'
}) {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ SMTP
  if (!process.env.SMTP_HOST || !process.env.SMTP_USER || !process.env.SMTP_PASS) {
    throw new Error('SMTP settings not configured. Please check your .env file.');
  }

  try {
    const transporter = createTransporter();

    // HTML —à–∞–±–ª–æ–Ω –ø–∏—Å—å–º–∞
    const htmlContent = `
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  
</head>
<body>
  <div class="header">
    <h1>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —Å–ª—É—Ö–∞</h1>
  </div>

  <div class="content">
    <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}!</p>

    <p>–í—ã –ø—Ä–æ—à–ª–∏ –æ–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç –Ω–∞ —Å–ª—É—Ö –Ω–∞ —Å–∞–π—Ç–µ <b>DomSluha</b>.</p>

    <div class="result-box">
      <div class="result-title"><b>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</b> ${testResult}</div>
    </div>

    <div class="pdf-note">
      <i>–ö –ø–∏—Å—å–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω PDF-—Ñ–∞–π–ª —Å –ø–æ–ª–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –≤–∫–ª—é—á–∞—è –∞—É–¥–∏–æ–≥—Ä–∞–º–º—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.</i>
    </div>

    <p>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∑–∞–±–æ—Ç–∏—Ç–µ—Å—å –æ —Å–≤–æ—ë–º –∑–¥–æ—Ä–æ–≤—å–µ.<br>–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –æ–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É. –ú—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –≥–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –ø–æ–ª–Ω—É—é –∞—É–¥–∏–æ–º–µ—Ç—Ä–∏—é –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.</p>

    <p>üåê –°–∞–π—Ç: <a href="https://domsluha.kz/" style="color: #667eea;">https://domsluha.kz/</a></p>
  </div>

  <div class="footer">
    <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ <b>DomSluha</b></p>
  </div>
</body>
</html>
    `;

    // –¢–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø–∏—Å—å–º–∞ (–¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç HTML)
    const textContent = `
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}!

–í—ã –ø—Ä–æ—à–ª–∏ –æ–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç –Ω–∞ —Å–ª—É—Ö –Ω–∞ —Å–∞–π—Ç–µ DomSluha.

–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${testResult}

–ö –ø–∏—Å—å–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω PDF-—Ñ–∞–π–ª —Å –ø–æ–ª–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –≤–∫–ª—é—á–∞—è –∞—É–¥–∏–æ–≥—Ä–∞–º–º—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∑–∞–±–æ—Ç–∏—Ç–µ—Å—å –æ —Å–≤–æ—ë–º –∑–¥–æ—Ä–æ–≤—å–µ.

–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –æ–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É. –ú—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –≥–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –ø–æ–ª–Ω—É—é –∞—É–¥–∏–æ–º–µ—Ç—Ä–∏—é –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.

üåê –°–∞–π—Ç: https://domsluha.kz/

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ DomSluha
    `;

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏—Å—å–º–∞
    const mailOptions = {
      from: `"–¢–µ—Å—Ç —Å–ª—É—Ö–∞ –æ—Ç DomSluha" <${process.env.SMTP_USER}>`,
      to: to,
      subject: '–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç–∞ —Å–ª—É—Ö–∞ DomSluha',
      text: textContent,
      html: htmlContent,
      attachments: []
    };

    // –î–æ–±–∞–≤–ª—è–µ–º PDF –≤–ª–æ–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–æ
    if (pdfBase64) {
      mailOptions.attachments.push({
        filename: pdfFilename,
        content: pdfBase64,
        encoding: 'base64'
      });
    }

    console.log('Sending email to:', to);

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    const info = await transporter.sendMail(mailOptions);

    console.log('Email sent successfully:', info.messageId);

    return {
      success: true,
      messageId: info.messageId,
      message: 'Email sent successfully'
    };

  } catch (error) {
    console.error('Error sending email:', error);
    throw error;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP
 * @returns {Promise<boolean>}
 */
export async function verifyEmailConfig() {
  try {
    const transporter = createTransporter();
    await transporter.verify();
    console.log('SMTP configuration is valid');
    return true;
  } catch (error) {
    console.error('SMTP configuration error:', error);
    return false;
  }
}
